<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.green.airline.repository.interfaces.MemberRepository">

	<select id="selectById" resultType="com.green.airline.dto.response.MemberInfoDto">
		SELECT m.id AS id, kor_name, eng_name, user_role, birth_date, gender, phone_number, email, address, nationality, grade, join_at, withdraw_at, status
		FROM member_tb AS m 
		JOIN user_tb AS u
		ON m.id = u.id
		WHERE m.id = '${id}'
	</select>

	<select id="selectBySocialUserInfo"
		resultType="com.green.airline.dto.kakao.SocialDto">
		SELECT *
		FROM member_tb
		WHERE id='${id}'
	</select>

	<insert id="insertMember">
		INSERT INTO member_tb(id, kor_name, eng_name,
		birth_date, gender,
		phone_number, email, address, nationality)
		VALUES('${id}', '${korName}', '${engName}', '${birthDate}', '${gender}',
		'${phoneNumber}',
		'${email}', '${address}', '${nationality}')
	</insert>

	<!-- Todo 삭제 -->
	<insert id="insertSocialMember">
		INSERT INTO member_tb(id, kor_name, eng_name,
		birth_date, gender,
		phone_number, email, address, nationality)
		VALUES('${id}', '${korName}', '${engName}', '${birthDate}', '${gender}',
		'${phoneNumber}',
		'${email}', '${address}', '${nationality}')
	</insert>
	
	<insert id="insertBySocialDto">
		INSERT INTO member_tb(id, kor_name, email, gender)
		VALUES('${id}', '${nickname}', '${email}', '${gender}')
	</insert>
	
	<select id="existsById" resultType="com.green.airline.repository.model.Member">
		SELECT * FROM member_tb WHERE id = '${id}'
	</select>
	
	<select id="selectByKorNameandEmailAndBirthDate" resultType="com.green.airline.repository.model.Member">
		SELECT * FROM MEMBER_TB where kor_name = '${korName}' and email = '${email}' and birth_date = '${birthDate}'
	</select>

	<update id="updateMemberById">
		update member_tb
		set kor_name = #{member.korName}, eng_name = #{member.engName}, birth_date = #{member.birthDate}, gender = #{member.gender}, phone_number = #{member.phoneNumber}, email = #{member.email}, address = #{member.address}, nationality = #{member.nationality}
		where id = '${id}'
	</update>
	
	<delete id="deleteSocialMemberById">
		delete member_tb from where id = '${id}'
	</delete>
	
	<select id="selectMemberListAll" resultType="com.green.airline.repository.model.Member">
		SELECT * FROM member_tb
	</select>
	
	<select id="selectMemberListAllLimit" resultType="com.green.airline.dto.response.MemberInfoDto">
		SELECT m.id AS id, kor_name, eng_name, user_role, birth_date, gender, phone_number, email, address, nationality, grade, join_at, withdraw_at, status
		FROM member_tb AS m 
		JOIN user_tb AS u
		ON m.id = u.id
		ORDER BY u.join_at DESC
		LIMIT ${index}, 10
	</select>
	
	<select id="selectMemberListSearch" resultType="com.green.airline.dto.response.MemberInfoDto">
		SELECT m.id AS id, kor_name, eng_name, user_role, birth_date, gender, phone_number, email, address, nationality, grade, join_at, withdraw_at, status
		FROM member_tb AS m 
		JOIN user_tb AS u
		ON m.id = u.id
		WHERE m.id LIKE CONCAT("%", '${search}', "%")
		ORDER BY u.join_at DESC
	</select>
	
</mapper>
