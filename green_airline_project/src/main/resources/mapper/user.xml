<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.airline.repository.interfaces.UserRepository">

	<select id="selectByIdAndPassword" resultType="com.green.airline.repository.model.User">
		SELECT * FROM user_tb WHERE id = '${id}' AND password = '${password}'
	</select>
	
	<insert id="insertByUser">
		INSERT INTO user_tb (id, password, user_role)
		VALUES('${id}', '${password}', '${userRole.userRole}')
	</insert>
	
	<select id="selectSocialDtoById" resultType="com.green.airline.repository.model.User">
		SELECT * FROM user_tb WHERE id = '${id}'
	</select>

	<!-- 비밀번호 찾기 할때 변경할 비밀번 -->
	<update id="updateUserPwById">
		update user_tb set password = '${password}' where id = '${userId}';
	</update>
	<!-- 비밀번호 찾기할 때 아이디로 유저 존재 여부 판 -->
	<select id="selectById" resultType="com.green.airline.repository.model.User">
		SELECT * FROM user_tb WHERE id = '${id}'
	</select>
	
	<update id="updateGradeByMemberId">
			update member_tb set grade = '${grade}' where id = '${memberId}'
	</update>

	<select id="selectUserById" resultType="com.green.airline.repository.model.User">
		select * from user_tb WHERE id = '${id}'
	</select>
	
	<update id="updateUserById">
		update user_tb
		set password = '${password}'
		where id = '${id}'
	</update>
	
	<update id="updateUserByStatus">
		update user_tb
		set status = '${status}', withdraw_at = now()
		where id = '${id}'
	</update>
	
	<delete id="deleteSocialUserById">
		delete from user_tb where id = '${id}'
	</delete>
	
	<select id="selectNewUserCountByMonth" resultType="com.green.airline.dto.response.CountByYearAndMonthDto">
		SELECT YEAR(join_at) AS `year`, MONTH(join_at) AS `month`, COUNT(*) AS count
		FROM user_tb
		WHERE YEAR(join_at) = '${year}' AND MONTH(join_at)  = '${month}' AND user_role != '관리자'
		GROUP BY `year`, `month`
	</select>
	
	<select id="selectWithdrawUserCountByMonth" resultType="com.green.airline.dto.response.CountByYearAndMonthDto">
		SELECT YEAR(withdraw_at) AS `year`, MONTH(withdraw_at) AS `month`, COUNT(*) AS count
		FROM user_tb
		WHERE YEAR(withdraw_at) = '${year}' AND MONTH(withdraw_at) = '${month}' AND user_role != '관리자'
		GROUP BY `year`, `month`
	</select>
	
	<insert id="insert">
		INSERT INTO user_tb (id, password, user_role)
		VALUES('${id}', '${password}', '${userRole}')
	</insert>
	
</mapper>